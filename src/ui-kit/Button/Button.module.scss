@use 'sass:map';

$types: (
  default: (
    mainColor: var(--primary-100),
    fontColor: white,
    shadowColor: rgba(var(--primary), 0.25),
    borderColor: none,
  ),
  danger: (
    mainColor: #ff4545,
    fontColor: white,
    shadowColor: #ff454540,
    borderColor: none,
  ),
  ghost: (
    mainColor: transparent,
    fontColor: #191b35,
    shadowColor: rgba(0, 0, 0, 0.08),
    borderColor: var(--frame),
  ),
);

$sizes: (
  middle: (
    height: 42px,
    padding: 20px,
    fontSize: 16px,
  ),
  small: (
    height: 32px,
    padding: 14px,
    fontSize: 13px,
  ),
);

.iconWrapper {
  margin-left: 10px;
}

.btn {
  &:global(.ant-btn) {
    display: flex;
    justify-content: center;
    align-items: center;
    width: min-content;

    border-radius: 4px;
    font-weight: 600;

    white-space: nowrap;
    transition: 0.25s;

    &:not(&[disabled]):hover {
      transform: translate(-4px, -4px);
    }

    &:not(&[disabled]):active {
      transform: translate(-2px, -2px);
    }
  }
}

.btn-float {
  &:global(.ant-btn) {
    width: 100%;
  }
}

@mixin btnType($mainColor, $fontColor, $shadowColor, $borderColor) {
  &:global(.ant-btn) {
    &,
    &:hover,
    &:active,
    &:focus,
    &[disabled],
    &[disabled]:hover,
    &[disabled]:active {
      border: none;
      border: 1px solid $borderColor;
      background-color: $mainColor;
      color: $fontColor;

      svg {
        path {
          fill: $fontColor;
        }
      }
    }

    &[disabled] {
      opacity: 0.6;
    }

    &:hover {
      transform: translate(-4px, -4px);
      box-shadow: 4px 4px 0 $shadowColor;
    }

    &:active {
      transform: translate(-2px, -2px);
      box-shadow: 2px 2px 0 $shadowColor;
      background-color: $shadowColor;
    }
  }
}

@mixin btnSize($height, $padding, $fontSize) {
  &:global(.ant-btn) {
    padding: 0 $padding;
    height: $height;
    font-size: $fontSize;
  }
}

@each $type, $styles in $types {
  .btn-#{$type} {
    @include btnType(map.values($styles)...);
  }
}

@each $size, $sizesConfig in $sizes {
  .btn-#{$size} {
    @include btnSize(map.values($sizesConfig)...);
  }
}
