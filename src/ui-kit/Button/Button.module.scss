@use 'sass:map';

$types: (
  default: (
    mainColor: #189ee9,
    fontColor: white,
    shadowColor: #189ee940,
    borderColor: none,
  ),
  danger: (
    mainColor: #ff4545,
    fontColor: white,
    shadowColor: #ff454540,
    borderColor: none,
  ),
  ghost: (
    mainColor: transparent,
    fontColor: #191b35,
    shadowColor: rgba(0, 0, 0, 0.08),
    borderColor: #dcdee4,
  ),
);

$sizes: (
  middle: (
    height: 42,
    padding: 20,
    fontSize: 16,
  ),
  small: (
    height: 32,
    padding: 14,
    fontSize: 13,
  ),
);

.btn {
  border-radius: 4px;
  font-weight: 600;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  transition: 0.25s;
  user-select: none;
  white-space: nowrap;

  &:hover {
    transform: translate(-4px, -4px);
  }

  &:active {
    transform: translate(-2px, -2px);
  }
}

@mixin btnType($mainColor, $fontColor, $shadowColor, $borderColor) {
  border: 1px solid $borderColor;
  background-color: $mainColor;
  color: $fontColor;

  &:hover {
    box-shadow: 4px 4px 0 $shadowColor;
  }

  &:active {
    box-shadow: 2px 2px 0 $shadowColor;
  }
}

@mixin btnSize($height, $padding, $fontSize) {
  padding: 0 $padding;
  height: $height;
  font-size: $fontSize;
}

@each $type, $styles in $types {
  .btn-#{$type} {
    @include btnType(map.values($styles)...);
  }
}

@each $size, $sizesConfig in $sizes {
  .btn-#{$size} {
    @include btnSize(map.values($sizesConfig)...);
  }
}
